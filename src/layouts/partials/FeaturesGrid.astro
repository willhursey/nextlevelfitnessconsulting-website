---
import ImageMod from "@/components/ImageMod.astro";
import DynamicIcon from "@/helpers/DynamicIcon";
import { markdownify } from "@/lib/utils/textConverter";
import type { Button } from "@/types";
import { getEntry } from "astro:content";

interface FeaturesGrid {
  title: string;
  subtitle: string;
  description: string;
  list?: {
    image: string;
    title: string;
    description: string;
    button: Button;
  }[];
}

interface Props {
  content?: FeaturesGrid;
  largeHeading?: boolean;
}

const { content, largeHeading } = Astro.props;

let { title, subtitle, description, list }: FeaturesGrid = (
  await getEntry("sections", "features-grid")
).data;

if (content) {
  ({ title, subtitle, description } = content);
}
---

{
  (
    <section class="section">
      <div class="container">
        <div class="row">
          <div class="mx-auto text-center lg:col-8" data-aos="fade-up-sm">
            {subtitle && (
              <p
                class="mb-2 font-medium text-tertiary"
                set:html={markdownify(subtitle)}
              />
            )}
            {title &&
              (largeHeading ? (
                <h1 class="h2 md:h1 mb-6" set:html={markdownify(title)} />
              ) : (
                <h2 class="mb-6" set:html={markdownify(title)} />
              ))}
            {description && (
              <p
                class="text-lg/[inherit]"
                set:html={markdownify(description)}
              />
            )}
          </div>
          <div class="col-12 pt-20">
            <div class="row g-5">
              {list?.map((item, index) =>
                !((index + 1) % 3 === 0) ? (
                  <div
                    class="md:col-6"
                    data-aos="fade-up-sm"
                    data-aos-delay={index * 150}>
                    <div
                      class={`${(index + 1) % 3 === 0 ? "rounded-s-3xl" : "rounded-3xl"} flex min-h-full flex-col justify-start bg-theme-light p-8`}>
                      {item.title && (
                        <h3
                          class="h4 mb-4"
                          set:html={markdownify(item.title)}
                        />
                      )}
                      {item.description && (
                        <p
                          class="mb-auto text-lg/[inherit]"
                          set:html={markdownify(item.description)}
                        />
                      )}
                      {item.button && item.button.enable && (
                        <a
                          class="btn btn-primary mt-10"
                          href={item.button.link}>
                          {item.button.label}
                          <span class="sr-only">Details</span>
                          <span class="icon-wrapper">
                            <span class="icon">
                              <DynamicIcon icon={"FaArrowRight"} />
                            </span>
                            <span class="icon" aria-hidden="true">
                              <DynamicIcon icon={"FaArrowRight"} />
                            </span>
                          </span>
                        </a>
                      )}

                      {item.image && (index + 1) % 3 !== 0 && (
                        <ImageMod
                          class="mt-10 rounded-3xl shadow-sm"
                          src={item.image}
                          alt={`icon related to ${item.title}`}
                        />
                      )}
                    </div>
                  </div>
                ) : (
                  <div class="col-12" data-aos="fade-up-sm">
                    <div class="rounded-3xl bg-theme-light p-8">
                      <div class="row gx-0 g-5 items-center">
                        <div class="lg:col-4 lg:pe-6">
                          {item.title && (
                            <h3
                              class="h4 mb-4"
                              set:html={markdownify(item.title)}
                            />
                          )}
                          {item.description && (
                            <p
                              class="text-lg/[inherit]"
                              set:html={markdownify(item.description)}
                            />
                          )}
                          {item.button && item.button.enable && (
                            <a
                              class="btn btn-primary mt-10"
                              href={item.button.link}>
                              {item.button.label}
                              <span class="sr-only">Details</span>
                              <span class="icon-wrapper">
                                <span class="icon">
                                  <DynamicIcon icon={"FaArrowRight"} />
                                </span>
                                <span class="icon" aria-hidden="true">
                                  <DynamicIcon icon={"FaArrowRight"} />
                                </span>
                              </span>
                            </a>
                          )}
                        </div>
                        <div class="lg:col-8 lg:ps-6">
                          <ImageMod
                            class="rounded-3xl shadow-sm"
                            src={item.image}
                            alt={`icon related to ${item.title}`}
                          />
                        </div>
                      </div>
                    </div>
                  </div>
                )
              )}
            </div>
          </div>
        </div>
      </div>
    </section>
  )
}
