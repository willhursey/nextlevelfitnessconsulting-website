---
import ImageMod from "@/components/ImageMod.astro";
import DynamicIcon from "@/helpers/DynamicIcon";
import { markdownify } from "@/lib/utils/textConverter";
import type { Button } from "@/types";
import { getEntry } from "astro:content";

interface Banner {
  title: string;
  description: string;
  bg_images: string;
  images: {
    src: string;
    alt: string;
  }[];
  buttons: Button[];
}

const { title, description, buttons, images }: Banner = (
  await getEntry("sections", "home-banner")
).data;
---

{
  (
    <section class="pb-0 pt-16">
      <div class="container">
        <div class="row justify-center">
          <div class="mb-8 text-center md:col-9 lg:col-11">
            {title && (
              <h1
                set:html={markdownify(title)}
                data-aos="fade-up-sm"
                class="mb-4 text-h3 lg:text-h1"
              />
            )}
            {description && (
              <p
                set:html={markdownify(description)}
                data-aos="fade-up-sm"
                class="mb-8 text-lg/[inherit]"
              />
            )}
            {/* This section has two buttons on the Hero section of the home page currently 
            "Get Started" and "Learn More" modify this if you want more or less buttons, 
            if you want no buttons then remove this section*/}
            {buttons && (
              <ul class="flex flex-wrap justify-center gap-4">
                {buttons.map(({ label, link }, index) => (
                  <li data-aos="fade-up-sm" data-aos-delay={100 + index * 50}>
                    <a
                      class={`${index === 0 ? "btn-primary" : "btn-outline-primary"} btn `}
                      href={link}
                      target={link.startsWith("http") ? "_blank" : "_self"}
                      rel="noopener">
                      {label}
                      <span class="sr-only">Details</span>
                      <span class="icon-wrapper">
                        <span class="icon">
                          <DynamicIcon icon={"FaArrowRight"} />
                        </span>
                        <span class="icon" aria-hidden="true">
                          <DynamicIcon icon={"FaArrowRight"} />
                        </span>
                      </span>
                    </a>
                  </li>
                ))}
              </ul>
            )}
          </div>
          {images && (
            <>
              <div
                class="col-12 lg:pt-2 order-2"
                data-aos="fade-up-sm"
                data-aos-delay="400">
                {/* The below div displays a large image on the home screen, maybe display a meal plan here */}
                <div class="max-h-[510px] overflow-hidden">
                  {images[0] && (
                    <ImageMod src={images[0].src} alt={images[0].alt} />
                  )}
                </div>
              </div>
              <div class="col-12 pb-4 pt-16 lg:pb-0 order-1">
                <div class="flex flex-wrap justify-center gap-4 px-4 lg:flex-nowrap lg:justify-between lg:px-0">
                  {/* This section displays three images above the image mentioned above, maybe display stats here */}
                  {images.slice(1, 4).map(({ src, alt }, index) => (
                    <div
                      class={`${index === 0 ? "lg:mt-8 [&.aos-animate]:lg:!rotate-[-9.4deg]" : index === 1 ? "[&.aos-animate]:lg:!rotate-[2.57deg]" : "[&.aos-animate]:lg:!rotate-[-8.52deg]"}`}
                      data-aos="fade-in"
                      data-aos-duration="400"
                      data-aos-delay={150 + index * 150 + 50}>
                      <ImageMod
                        src={src}
                        alt={alt}
                        class={`${index === 0 ? "min-[350px]:h-[80px] lg:h-[72px] shadow" : index === 1 ? "shadow-sm min-[350px]:h-[80px] lg:h-[98px]" : "shadow min-[350px]:h-[80px] lg:h-[84px]"} rounded-md md:rounded-xl w-auto`}
                      />
                    </div>
                  ))}
                </div>
              </div>
            </>
          )}
        </div>
      </div>
    </section>
  )
}
