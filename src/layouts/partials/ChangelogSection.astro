---
import ImageMod from "@/components/ImageMod.astro";
import { markdownify } from "@/lib/utils/textConverter";
import { getEntry } from "astro:content";

interface Changelog {
  title: string;
  subtitle: string;
  description: string;
  list: {
    title: string;
    short_title: string;
    image: string;
    date: string;
    version: string;
    content: string;
  }[];
}
const changelogPage = Astro.url.pathname.startsWith("/changelog");

const { title, subtitle, description, list }: Changelog = (
  await getEntry("sections", "changelog")
).data;
---

{
  (
    <section class="section">
      <div class="container">
        <div class="row">
          <div
            class={`${changelogPage ? "xl:col-8" : "xl:col-7"} mx-auto text-center lg:col-8`}
            data-aos="fade-up-sm">
            {subtitle && (
              <p
                class="mb-2 font-medium text-tertiary"
                set:html={markdownify(subtitle)}
              />
            )}
            {title && !changelogPage && (
              <h2 class="mb-6" set:html={markdownify(title)} />
            )}
            {title && changelogPage && (
              <h1 class="h2 md:h1 mb-6" set:html={markdownify(title)} />
            )}
            {description && (
              <p
                class="text-lg/[inherit]"
                set:html={markdownify(description)}
              />
            )}
          </div>
          <div
            class="col-12 mx-auto pt-20"
            data-aos="fade-up-sm"
            data-aos-delay="200">
            {list?.map((item) => (
              <div class="row gy-5 mb-10 items-start md:g-0 last:mb-0">
                <div class="col-auto mx-auto md:sticky md:top-20">
                  <div
                    class={`relative flex w-52 flex-col justify-start rounded-3xl bg-dark px-6 py-5`}>
                    {item.short_title && (
                      <div
                        class="mb-2 text-base leading-relaxed text-white font-medium"
                        set:html={markdownify(item.short_title, true)}
                      />
                    )}

                    {item.date && (
                      <p
                        class="mb-24 text-base text-white/30"
                        set:html={markdownify(item.date)}
                      />
                    )}

                    {item.image && (
                      <ImageMod
                        class="pointer-events-none absolute -bottom-8 -right-8 select-none"
                        src={item.image}
                        alt={`bg pattern`}
                      />
                    )}

                    {item.version && (
                      <p
                        class="rounded-full bg-secondary px-6 py-2 text-center text-lg/[inherit] font-medium"
                        set:html={markdownify(item.version)}
                      />
                    )}
                  </div>
                </div>
                {item.content && (
                  <div class="md:col-8 lg:col-9">
                    <div
                      class="content prose-p:text-lg/[inherit]"
                      set:html={markdownify(item.content, true)}
                    />
                  </div>
                )}
              </div>
            ))}
          </div>
        </div>
      </div>
    </section>
  )
}
